<CheckBox
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" 
             x:Class="br.corp.bonus630.wpf.CustomUIControls.CircleCheckBox"
                     
    mc:Ignorable="d" MinHeight="22" Style="{DynamicResource CheckBoxStyle1}" Content="CheckBox">

    <CheckBox.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                   StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
            <Style x:Key="OptionMarkFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                   StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
            <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
                <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>-->
                <Setter Property="Foreground" Value="{Binding Foreground}"/>

                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Width="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <ed:Arc ArcThickness="16" x:Name="checkBoxFill" Fill="{StaticResource OptionMark.Disabled.Background}" ArcThicknessUnit="Pixel" EndAngle="360"   
                                            Stretch="Fill" Stroke="Black" StrokeThickness="0" StartAngle="0"   
                                            Opacity="1" HorizontalAlignment="Left" Width="18" Height="18" VerticalAlignment="Center" />
                                    <ed:Arc x:Name="checkBoxBorder" ArcThickness="0.18" ArcThicknessUnit="Percent" EndAngle="360" Fill="{TemplateBinding Foreground}"
                                        HorizontalAlignment="Left"  Stretch="None" Stroke="Black" StartAngle="0" VerticalAlignment="Center" Width="18" Height="18"
                                        StrokeThickness="0" />
                                    <Grid x:Name="markGrid" VerticalAlignment="Center" Width="18" Height="18">
                                        <Path x:Name="optionMark" Data="M4.0243218,10.209758 L12.878327,18 23.77753,1.4656085 11.957987,12.75351"  Stretch="Fill" 
                                          Stroke="{TemplateBinding Foreground}" StrokeThickness="0" Margin="1.875,1,0.875,4" Fill="{TemplateBinding Foreground}" 
                                          Opacity="0"/>
                                        <ed:Arc ArcThickness="16" x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" ArcThicknessUnit="Pixel" 
                                            EndAngle="360"   Stretch="None" Stroke="Black" StrokeThickness="0" StartAngle="0"  Opacity="0" HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>


                                    </Grid>
                                </Grid>
                                <Grid Margin="4" Grid.Column="1" Height="{Binding Path=Heigth}">
                                <ContentPresenter x:Name="contentPresenter"  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="Center"/>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                    <Setter Property="Padding" Value="4,-1,0,0"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <!--<Setter Property="Fill" TargetName="checkBoxFill" Value="{StaticResource OptionMark.MouseOver.Background}"/>-->
                                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <!--<Setter Property="Fill" TargetName="checkBoxFill" Value="{StaticResource OptionMark.Disabled.Background}"/>-->
                                    <Setter Property="Opacity" TargetName="checkBoxFill" Value="1"/>
                                    <Setter Property="Fill" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="true">
                                    <Setter Property="Opacity" TargetName="checkBoxFill" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <!--<Setter Property="Fill" TargetName="checkBoxFill" Value="{StaticResource OptionMark.Pressed.Background}"/>-->
                                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </CheckBox.Resources>
</CheckBox>
