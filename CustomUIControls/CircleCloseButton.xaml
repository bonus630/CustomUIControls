<Button
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:br.corp.bonus630.wpf.CustomUIControls"
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" x:Class="br.corp.bonus630.wpf.CustomUIControls.CircleCloseButton"
             mc:Ignorable="d" Height="20" Width="20" MinHeight="20" MaxHeight="20" MinWidth="20" MaxWidth="20"
             Style="{DynamicResource CircleCloseButton}" >
    <Button.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="CircleCloseButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!--<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">-->
                        <Grid>
                            <ed:Arc x:Name="btnBorder" ArcThickness="1" ArcThicknessUnit="Pixel" EndAngle="360" Fill="{Binding BorderBrush}"   Margin="0" Stretch="Fill"  StartAngle="0"  />
                            <ed:Arc x:Name="btnBackground" ArcThickness="20" ArcThicknessUnit="Pixel" EndAngle="360" Fill="{Binding Background}"   Margin="2" Stretch="Fill"  StartAngle="0"  />
                            <ed:Arc x:Name="btnBackgroundOver" ArcThickness="20" ArcThicknessUnit="Pixel" EndAngle="360" Fill="{Binding BackgroundOver}"   Margin="2" Stretch="Fill"  StartAngle="0"  Opacity="0"/>
                            <Path x:Name="btnX1" Data="M4,4 L16,16" Stroke="{Binding Foreground}" StrokeThickness="1"  HorizontalAlignment="Left" Height="12" Margin="4,4,0,0" Stretch="Fill" VerticalAlignment="Top" Width="12"/>
                            <Path x:Name="btnX2" Data="M16,4 L4,16" Stroke="{Binding Foreground}" StrokeThickness="1" Fill="{Binding Foreground}" HorizontalAlignment="Left" Height="12" Margin="4,4,0,0" Stretch="Fill" VerticalAlignment="Top" Width="12"/>


                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
 

                        </Grid>
                        <!--</Border>-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                                <Setter Property="Opacity" TargetName="btnBackgroundOver" Value="0" />
                                <Setter Property="Fill" TargetName="btnBackground" Value="{Binding Background}" />
                                <Setter Property="Fill" TargetName="btnBorder" Value="{Binding BorderBrush}" />
                                <Setter Property="Stroke" TargetName="btnX1" Value="{Binding Foreground}" />
                                <Setter Property="Stroke" TargetName="btnX2" Value="{Binding Foreground}" />
                                <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding Foreground}"/>-->
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                                <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundOver}"/>-->
                                <Setter Property="Stroke" TargetName="btnX1" Value="{Binding ForegroundOver}" />
                                <Setter Property="Stroke" TargetName="btnX2" Value="{Binding ForegroundOver}" />
                                <Setter Property="Opacity" TargetName="btnBackgroundOver" Value="1" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>-->
                                <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                                <Setter Property="Stroke" TargetName="btnX1" Value="{StaticResource Button.Disabled.Foreground}" />
                                <Setter Property="Stroke" TargetName="btnX2" Value="{StaticResource Button.Disabled.Foreground}" />
                                <Setter Property="Fill" TargetName="btnBackground" Value="{StaticResource Button.Disabled.Background}" />
                                <!--<Setter Property="Fill" TargetName="btnBackGround" Value="{StaticResource Button.Disabled.Background}" />-->
                                <Setter Property="Fill" TargetName="btnBorder" Value="{StaticResource Button.Disabled.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Button.Resources>
    

</Button>
